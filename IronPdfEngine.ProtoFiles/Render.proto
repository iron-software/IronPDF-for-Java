syntax = "proto3";
package IronPdfEngine.Proto;
import "Basic.proto";

option java_package = "com.ironsoftware.ironpdf.internal.proto";
option java_multiple_files = true;

message ChromeHttpLoginCredentials{
  optional StringDictionary custom_cookies = 1;
  optional bool enable_cookies = 2;
  optional string  network_password = 3;
  optional string  network_username = 4;
}

message RenderPdfDocumentFromStringSnippetRequestStream {
  oneof request {
    Info info = 1;
    string html_chunk = 2;
  }
  message Info{
    optional ChromePdfRenderOptions render_options = 1;
    optional ChromeHttpLoginCredentials http_options = 2;
    optional string base_url = 3;
  }
}

message RenderPdfDocumentFromHtmlFileRequest {
  string html_file_path = 1;
  optional ChromePdfRenderOptions render_options = 2;
  optional ChromeHttpLoginCredentials http_options = 3;
}

message RenderPdfDocumentFromUriRequest {
  string uri = 1;
  optional ChromePdfRenderOptions render_options = 2;
  optional ChromeHttpLoginCredentials http_options = 3;
}

message RenderPdfDocumentFromZipRequestStream {
  oneof request {
    Info info = 1;
    bytes raw_zip_chunk = 2;
  }
  message Info{
  string main_file = 1;
  optional ChromePdfRenderOptions render_options = 2;
  optional ChromeHttpLoginCredentials http_options = 3;
  }
}


//we not allow to add HeaderFooter because html and string could be too long to handle that we need to use stream which will makes things complicated.
message ChromePdfRenderOptions{
 // optional bool apply_margin_to_header_and_footer = 1;
  optional bool create_pdf_forms_from_html = 1;
  optional string custom_css_url = 2;
  optional bool enable_java_script = 3;
  optional FitToPaperModes fit_to_paper_mode = 5;
  optional bool generate_unique_document_identifiers = 6;
  optional bool gray_scale = 7;
  optional double margin_bottom = 8;
  optional double margin_left = 9;
  optional double margin_right = 10;
  optional double margin_top = 11;
  optional PdfPaperOrientation paper_orientation = 12;
  optional PdfPaperSize paper_size = 13;
  optional bool print_html_backgrounds = 14;
  optional int32 render_delay = 15;
  optional int32 timeout = 16;
  optional string title = 17;
  optional int32 view_port_height = 18;
  optional int32 view_port_width = 19;
  optional int32 zoom = 20;
  optional string  input_encoding = 21;
  optional PdfCssMediaType css_media_type = 22;
  optional double custom_paper_width = 23;
  optional double custom_paper_height = 24;
}

message PdfPaperOrientation{
  int32 enum_value = 1;
}

message PdfCssMediaType{
  int32 enum_value = 1;
}

message PdfPaperSize {
  int32 enum_value = 1;
}

message FitToPaperModes {
  int32 enum_value = 1;
}

message RenderPdfDocumentFromRtfStringRequestStream{
    string rtf_string_chunk = 1;
}

message ApplyCookiesRequest{
    string url = 1;
    ChromeHttpLoginCredentials http_options = 2;
}

message ClearCookiesRequest{}
